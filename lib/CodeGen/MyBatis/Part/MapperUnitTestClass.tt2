[%- SET attributes = comp.attributes -%]
[%- SET mapper     = comp.get_part("mapper_interface") -%]
[%- SET mapper_ut  = comp.get_part("mapper_unit_test_class") -%]
[%- SET model      = comp.get_part("model_class") -%]
[%- SET config_xml = comp.get_part("mybatis_config_xml_ut") -%]
package [% mapper_ut.package_name %];

import org.apache.ibatis.io.Resources;
import org.apache.ibatis.session.SqlSession;
import org.apache.ibatis.session.SqlSessionFactory;
import org.apache.ibatis.session.SqlSessionFactoryBuilder;
import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import [% model.q_class_name %];

import java.io.IOException;
import java.io.InputStream;
[% PERL -%]
   my $attributes = $stash->get('attributes');
   my @dates = grep { $_->[1] eq 'Date' } @$attributes;
   $stash->set('hasDate', scalar(@dates));
[% END -%]
[% IF hasDate -%]
import java.util.Date;
[% END -%]

import static org.junit.Assert.assertEquals;

public class [% mapper_ut.class_name %] {
    private static SqlSessionFactory sqlSessionFactory;
    private SqlSession sqlSession;

    @BeforeClass
    public static void setUpClass() throws IOException {

        String resource = "[% config_xml.classpath_entry %]";
        InputStream inputStream = Resources.getResourceAsStream(resource);
        sqlSessionFactory = new SqlSessionFactoryBuilder().build(inputStream);
    }

    @Before
    public void setUp() {
        sqlSession = sqlSessionFactory.openSession();
    }

    @After
    public void tearDown() {
        sqlSession.close();
    }

    @Test
    public void testSelect[% comp.name %]ById () {
[% FOREACH a IN attributes -%]
    [%- SET type = a.1 -%]
    [%- SET attr = a.0 -%]
    [%- IF type == 'String' -%]
        [% type %] exp[% attr.ucfirst %] = ""; //TODO: fix here

    [%- ELSIF type == 'Long' -%]
        [% type %] exp[% attr.ucfirst %] = 100L; //TODO: fix here

    [%- ELSIF type == 'int' -%]
        [% type %] exp[% attr.ucfirst %] = 1000; //TODO: fix here

    [%- ELSIF type == 'boolean' -%]
        [% type %] exp[% attr.ucfirst %] = true; //TODO: fix here

    [%- ELSIF type == 'Date' -%]
        [% type %] exp[% attr.ucfirst %] = new Date(); //TODO: fix here

    [%- ELSE -%]
    [%- END -%]
[% END -%]

        [% mapper.class_name %] mapper = sqlSession.getMapper([% mapper.class_name %].class);
        [% model.class_name %] product = mapper.select[% model.class_name %](100L);

[% FOREACH a IN attributes -%]
    [%- SET attr = a.0 -%]
    [%- SET type = a.1 -%]
    [%- IF type != 'boolean' -%]
        [%- SET accessor = 'get' -%]
    [%- ELSE -%]
        [%- SET accessor = 'is' -%]
    [%- END -%]
        assertEquals("Property [% attr %] test", exp[% attr.ucfirst %], product.[% accessor %][% attr.ucfirst %]());
[% END -%]

    }
}
